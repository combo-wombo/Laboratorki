class Placeholder(QLabel):
    def __init__(self, parent):
        super(Placeholder,self).__init__(parent)
        self.i = 0
        self.timer=QTimer()
        self.timer.setInterval(400)
        self.timer.timeout.connect(self.animateText)

    def stopTimer(self):
        QtTest.QTest.qWait(40000)
        self.timer.stop()

    def animateText(self):
        self.i += 1
        self.i = self.i%4
        self.setText("Loading" + ("."*self.i))
        

class App(QWidget):
    def __init__(self):
        super().__init__()
        self.title = 'PyQt5 Video'
        self.left = 100
        self.top = 100
        self.width = 640
        self.height = 500
        self.initUI()

    @pyqtSlot(QImage)
    def setImage(self, image):
        self.label.setPixmap(QPixmap.fromImage(image))

    def initUI(self):
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)
        self.resize(850, 550)

        self.labelExit = QLabel(self)
        self.labelExit.setText("Press to exit")
        self.labelExit.setGeometry(30,420,120,16)
        self.buttonExit = QPushButton(self)
        self.buttonExit.clicked.connect(self.close)
        self.buttonExit.setGeometry(30,440,140,50)
        self.buttonExit.setText("Exit")
        self.buttonExit.show()

        self.labelSelect = QLabel(self)
        self.labelSelect.setText("Select item to track")
        self.labelSelect.setGeometry(30,320,120,16)
        self.selection = QComboBox(self)
        self.selection.setGeometry(30,340,140,50)
        for item in self.listOptions():
            self.selection.addItem(item)
            self.selection.activated[str].connect(self.onChanged)

        self.labelCamera = QLabel(self)
        self.labelCamera.setText("Press to load camera feed")
        self.labelCamera.setGeometry(30,220,140,16)
        self.buttonCamera = QPushButton(self)
        self.buttonCamera.clicked.connect(self.openCamera)
        self.buttonCamera.setGeometry(30,240,140,50)
        self.buttonCamera.setText("Webcam")
        self.buttonCamera.show()

        self.labelFile = QLabel(self)
        self.labelFile.setText("Press to open a video file")
        self.labelFile.setGeometry(30,120,120,16)
        self.buttonFile = QPushButton(self)
        self.buttonFile.clicked.connect(self.openFile)
        self.buttonFile.setGeometry(30,140,140,50)
        self.buttonFile.setText("Video file")
        self.buttonFile.show()

        self.labelStop = QLabel(self)
        self.labelStop.setText("Press to stop everything")
        self.labelStop.setGeometry(30,10,140,16)
        self.buttonStop = QPushButton(self)
        self.buttonStop.clicked.connect(self.stopAll)
        self.buttonStop.setGeometry(30,30,140,50)
        self.buttonStop.setText("Stop")
        self.buttonStop.show()

        self.placeholder = Placeholder(self)
        self.placeholder.setText("Waiting for command")
        self.placeholder.setGeometry(191,11,638,478)
        self.placeholder.setStyleSheet('''QWidget{text-align: center; font-size: 30px; border: 1px solid black;}''')
        self.placeholder.show()
        self.label = QLabel(self)
        self.label.setStyleSheet('''QWidget{border: 1px solid black;}''')
        self.label.move(190, 10)
        self.label.resize(640, 480)
        self.show()

    def onChanged(self, text):
        global TRACKED_NAME
        TRACKED_NAME = text
    
    def listOptions(self):
        li = []
        category_index = label_map_util.create_category_index_from_labelmap(PATH_TO_LABELS, use_display_name=True)
        for a in category_index:
            li.append(category_index.get(a).get('name'))
        return li

app = QApplication(sys.argv)
application = App()
app.exec_()